name: Create GitHub Release

on:
  push:
    branches:
      - main

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout the code
        uses: actions/checkout@v3

      # Get the current version from the Swift Package manifest
      - name: Get version from Package.swift
        id: get_version
        run: |
          VERSION=$(grep 'let version' Package.swift | sed -n 's/.*"\(.*\)"/\1/p')
          echo "::set-output name=VERSION::$VERSION"

      # Create a new GitHub release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_ACTION_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: "v${{ steps.get_version.outputs.VERSION }}"
          body: "Release for version v${{ steps.get_version.outputs.VERSION }}"
          draft: false
          prerelease: false
